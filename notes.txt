sbt sits on top of Maven and Ivy
actions - a function that takes a request and returns a response
controllers
routes
`run` from the sbt prompt to start it. Once it's done, it will start the server on localhost:9000, and curl http://localhost:9000/
You need to set the perm gen size higher; export this before sbt `SBT_OPTS="-XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=512M"`
args are not parameters to Action but to method that produces action (?)
Need to give the types because compiled to Scala, no chance for type inference
Can you make closing slashes optional?
https://playframework.com/documentation/2.3.x/ScalaHome is useful.
A view a html file that compiles to Scala (I think...)
returns a type called Content
Usually suggest have a controllers layer that passes stuff off to the business logic layer (Dave calls it services layer) and then passes results off to controllers layer, i.e. a webby layer, and a business logic layer. We're not going to do this here for the purposes of speed.
Template is just a function like everything else in Scala
By default there are a function of no args
By putting the twirl at the top, we're saying it takes a parameter
it's a function that now takes one parameter.
To use it we use the @ (twirl)
@ then scala expression, then it puts result of expression into html
the mapping forms a two-way thing between a hash of strings and a thing you want
unapply, something we haven't seen but backs case classes. behind the scenes, take this object and tuple and make a method. unapply is the reverse
can get the body out of request.body but that has no type
request.body.asText gives an Option
also there is .asJson
request has this content in it
validating, something something use Either... 
If in the docs (Scala) you see a method with [use case] it means the definteion is a lie and the real stuff happenening is in 'Full Signature'
controller sits around for ever while we're running the app
form is always an immutable blank form so doesn't matter that it's hanging around the whole time
